import { NextPageWithLayout } from '@/shared/@types'
import { getData, getDataById } from '@/shared/getFetchData'
import { LocationPage } from '@/views/location-view'
import { GetStaticPaths, GetStaticProps, GetStaticPropsContext } from 'next'
import Head from 'next/head'
import { useRouter } from 'next/router'
import React from 'react'
import { QueryClient, dehydrate, useQuery } from 'react-query'

export const getStaticPaths: GetStaticPaths = async () => {
  const queryClient = new QueryClient()
  await queryClient.prefetchQuery('location', () => getData('https://rickandmortyapi.com/api', 'location'))
  const data = queryClient.getQueryData('location') as any

  const paths = data.results.map((location: any) => {
    return {
      params: { id: location.id.toString() },
    }
  })

  return {
    paths,
    fallback: false,
  }
}

export const getStaticProps: GetStaticProps = async (context: GetStaticPropsContext) => {
  const id = context.params?.id as string
  const queryClient = new QueryClient()
  await queryClient.prefetchQuery('location', () => getDataById('https://rickandmortyapi.com/api', 'location', id))

  return {
    props: {
      dehydratedState: dehydrate(queryClient),
    },
  }
}

const Location: NextPageWithLayout = () => {
  const { query } = useRouter()
  const { data: location } = useQuery('location', () =>
    getDataById('https://rickandmortyapi.com/api', 'location', query.id)
  )

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
      </Head>
      <LocationPage location={location} />
    </div>
  )
}

export default Location
